---
- hosts: webserver
  vars_files:
  - vars.yml

  tasks:

###############################################################################
    # CHECK IF FILE EXISTS IN CURRENT FOLDER

    - name: Check if file exists in {{cur_dir}}
      local_action: stat path="{{cur_dir}}/{{inputfile}}"
      register: p
    - debug:
        msg: "File exists!"
      when: p.stat.isreg is defined and p.stat.isreg

    - fail:
        msg: "File not found on local machine. Please move file to {{cur_dir}} !"
      when: p.stat.isreg is not defined

###############################################################################
# CHECK IF FILE ALREADY EXISTS ON SERVER

    - name: Check if file already exists
      stat:
        path: "{{server_metadata_dir_files}}/{{inputfile}}"
      register: status

    - fail:
        msg: "File with a similar name already exists. Please rename your file and try again!"
      when: status.stat.isreg is defined and status.stat.isreg

###############################################################################

# PREPARING  SERVER

    - name: Preparing Server
      file:
        path: "{{server_temp_metadata_dir}}"
        state: absent

    -  file:
        path: "{{server_temp_metadata_dir}}"
        state: directory
        mode: 0755


# The tasks just below are needed only when setting up server.
# They have been done separately in setup.yml.
# WARNING: execute setup.yml before running any other function

    # - file:
    #     path: "{{server_cur_dir}}"
    #     state: directory
    #     mode: 0755
    #
    # - file:
    #     path: "{{server_chunk_dir}}"
    #     state: directory
    #     mode: 0755
    #
    # - file:
    #     path: "{{server_metadata_dir}}"
    #     state: directory
    #     mode: 0755
    #
    # - file:
    #     path: "{{hash_freq_map}}"
    #     state: touch
    #     mode: 0755
    #
    # - file:
    #     path: "{{server_metadata_dir_files}}"
    #     state: directory
    #     mode: 0755

###############################################################################
# PREPARING  LOCAL MACHINE (specific to current upload task only)

    - name: Preparing local machine
      local_action: file path={{chunk_dir}} state=directory

    - local_action: file path={{metadata_dir}} state=directory

    - local_action: shell javac {{script_dir}}/ByteMergeAndSplit.java
      register: out
    - debug: var=out.stdout_lines

    - local_action: shell javac {{script_dir}}/hash.java
      register: out
    - debug: var=out.stdout_lines


###############################################################################
# PERFORMING TASKS

    - name: Splitting file into chunks
      local_action: shell java -classpath {{script_dir}} ByteMergeAndSplit split {{inputfile}} {{chunk_dir}} {{chunk_size}}

    - name: Generating hashlist of chunks
      local_action: script {{script_dir}}/generate_hashlist.sh {{inputfile}}
      register: out
    - debug: var=out.stdout_lines


    - name: Sending hashlist to server
      copy:
        src: "{{metadata_dir}}/{{inputfile}}.hashlist"
        dest: "{{server_temp_metadata_dir}}/{{inputfile}}.hashlist"

    # The path below is NOT ABSOLUTE . Its RELATIVE.
    - name: Processing hashlist on server
      script: srv_process_hashlist.sh "{{inputfile}}"
      register: out
    - debug: var=out.stdout_lines

    # - name: Fetching list of new chunks
    #   fetch:
    #    src: "{{server_temp_metadata_dir}}/{{inputfile}}.hashlist.new"
    #    dest: "{{metadata_dir}}/{{inputfile}}.hashlist.new"
    #    flat: yes

    - name: Fetching list of old chunks
      fetch:
       src: "{{server_temp_metadata_dir}}/{{inputfile}}.hashlist.old"
       dest: "{{metadata_dir}}/{{inputfile}}.hashlist.old"
       flat: yes

    - name: Deleting duplicate chunks from local machine
      local_action: script {{script_dir}}/delete_duplicate_chunks.sh {{inputfile}}
      register: out

    - debug: var=out.stdout_lines

    - name: Copying new chunks to server
      copy:
       src: "{{item}}"
       dest: "{{server_chunk_dir}}"
       owner: "root"
      with_fileglob:
      - "{{chunk_dir}}/*"

    # The path below is NOT ABSOLUTE . Its RELATIVE.
    - name: Alter metadata at server
      script: alter_metadata.sh {{inputfile}}
      register: out

    - debug: var=out.stdout_lines

    # Add code to handle errors

###############################################################################
 # Tasks below are for cleanup

    - local_action: file path="{{metadata_dir}}" state=absent

    - file:
       path: "{{server_temp_metadata_dir}}"
       state: absent

    - local_action: file path="{{chunk_dir}}" state=absent

    - local_action: file path="{{script_dir}}/ByteMergeAndSplit.class" state=absent

    - local_action: file path="{{script_dir}}/hash.class" state=absent
